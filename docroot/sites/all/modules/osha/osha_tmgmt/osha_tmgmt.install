<?php

include_once "osha_tmgmt.module";

/**
 * Implements hook_uninstall().
 */
function osha_tmgmt_uninstall() {
  if (db_field_exists('tmgmt_job_item', 'source_language')) {
    watchdog('osha_tmgmt', 'Removing source_language field from tmgmt_job_item');
    db_drop_field('tmgmt_job_item', 'source_language');
  }
  if (db_field_exists('tmgmt_job_item', 'target_language')) {
    watchdog('osha_tmgmt', 'Removing target_language field from tmgmt_job_item');
    db_drop_field('tmgmt_job_item', 'target_language');
  }
  if (db_field_exists('tmgmt_job_item', 'character_count')) {
    watchdog('osha_tmgmt', 'Removing character_count field from tmgmt_job_item');
    db_drop_field('tmgmt_job_item', 'character_count');
  }
  if (db_field_exists('tmgmt_job_item', 'page_count')) {
    watchdog('osha_tmgmt', 'Removing page_count field from tmgmt_job_item');
    db_drop_field('tmgmt_job_item', 'page_count');
  }

  if (db_field_exists('tmgmt_job', 'character_count')) {
    watchdog('osha_tmgmt', 'Removing character_count field from tmgmt_job');
    db_drop_field('tmgmt_job_item', 'character_count');
  }
  if (db_field_exists('tmgmt_job', 'page_count')) {
    watchdog('osha_tmgmt', 'Removing page_count field from tmgmt_job');
    db_drop_field('tmgmt_job_item', 'page_count');
  }
  if (db_field_exists('tmgmt_job', 'priority')) {
    watchdog('osha_tmgmt', 'Removing priority field from tmgmt_job');
    db_drop_field('tmgmt_job', 'priority');
  }
}


/**
 * Implements hook_install().
 */
function osha_tmgmt_install() {
  osha_tmgmt_workflow_create_roles();
  db_update('system')
    ->fields(array('weight' => 15))
    ->condition('name', 'osha_tmgmt', '=')
    ->execute();

  // tmgmt_job_item alteration.
  if (!db_field_exists('tmgmt_job_item', 'source_language')) {
    // tmgmt_job_item.source_language
    // Accepts NULL because language is assigned when the cart is checked out
    $field = array(
      'type' => 'varchar',
      'length' => 12,
      'not null' => FALSE,
      'description' => 'Entity original language',
    );
    db_add_field('tmgmt_job_item', 'source_language', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'target_language')) {
    // Accepts NULL because language is assigned when the cart is checked out
    $field = array(
      'type' => 'varchar',
      'length' => 12,
      'not null' => FALSE,
      'description' => 'Language to translate item into',
    );
    db_add_field('tmgmt_job_item', 'target_language', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'character_count')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Number of characters for this job item',
    );
    db_add_field('tmgmt_job_item', 'character_count', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'page_count')) {
    $field = array(
      'type' => 'numeric',
      'precision' => 6,
      'scale' => 2,
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Number of pages for this job item',
    );
    db_add_field('tmgmt_job_item', 'page_count', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'eid')) {
    $field = array(
      'description' => 'Translation Validators groups',
      'type' => 'int',
      'default' => NULL,
      'not null' => FALSE,
    );
    db_add_field('tmgmt_job_item', 'eid', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'vid')) {
    $field = array(
      'description' => 'Translated Revision',
      'type' => 'int',
      'default' => NULL,
      'not null' => FALSE,
    );
    db_add_field('tmgmt_job_item', 'vid', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'merged')) {
    $field = array(
      'description' => 'If the translation was merged to entity',
      'type' => 'int',
      'default' => NULL,
      'not null' => FALSE,
    );
    db_add_field('tmgmt_job_item', 'merged', $field);
  }


  // tmgmt_job alteration.
  if (!db_field_exists('tmgmt_job', 'character_count')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Number of characters for this job item',
    );
    db_add_field('tmgmt_job', 'character_count', $field);
  }

  if (!db_field_exists('tmgmt_job', 'page_count')) {
    $field = array(
      'type' => 'numeric',
      'precision' => 6,
      'scale' => 2,
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Number of pages for this job item',
    );
    db_add_field('tmgmt_job', 'page_count', $field);
  }
  if (!db_field_exists('tmgmt_job', 'priority')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Urgency of the translation (0=normal/1=high)',
    );
    db_add_field('tmgmt_job', 'priority', $field);
  }
  if (!db_field_exists('tmgmt_job', 'has_file_uploaded')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'If the job has file uploaded.',
    );
    db_add_field('tmgmt_job', 'has_file_uploaded', $field);
  }

  if (!db_field_exists('tmgmt_job', 'file_sent')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Marks the job if the translation file was sent to CDT',
    );
    db_add_field('tmgmt_job', 'file_sent', $field);
  }

  // Configure file translator for the CDT format and remove other translators.
  /* @var TMGMTTranslator $file */
  $file = tmgmt_translator_load('file');
  if ($file) {
    $file->settings['export_format'] = 'xml';
    $file->settings['allow_override'] = FALSE;
    $file->save();
  }

  $local = tmgmt_translator_load('local');
  if ($local) {
    $local->delete();
  }

  // Configure permissions for Layout Validator role.
  osha_tmgmt_update_7009();
}

/**
 * Implements hook_schema().
 */
function osha_tmgmt_schema() {
  $schema = array();

  $schema['osha_tmgmt_job_trans_validators'] = array(
    'description' => 'Base table for the tmgmt job translation validators - translation workflow',
    'fields' => array(
      'tvid' => array(
        'description' => 'Identifier',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'Node under translation',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'Translation Validator',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'tjiid' => array(
        'description' => 'Translation Job Item',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'approved' => array(
        'description' => 'NULL not voted, approved or rejected',
        'type' => 'varchar',
        'length' => 64,
        'default' => NULL,
        'not null' => FALSE,
      ),
      'next' => array(
        'description' => '0 - no, 1 - yes',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
      'weight' => array(
        'description' => 'Order of moderation, lowest first',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
      'message' => array(
        'description' => 'Message left by the Validator',
        'type' => 'text',
        'size' => 'medium',
      ),
      'deleted' => array(
        'description' => 'Deleted',
        'type' => 'int',
        'default' => 0,
        'unsigned' => TRUE,
      ),
    ),
    'primary key' => array('tvid'),
    'indexes' => array(
      'osha_tmgmt_tv_uid' => array('uid'),
      'osha_tmgmt_tv_nid' => array('nid'),
      'osha_tmgmt_tv_deleted' => array('deleted'),
      'osha_tmgmt_tv_next' => array('next'),
    ),
    'foreign keys' => array(
      'uid' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'nid' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
      'tjiid' => array(
        'table' => 'tmgmt_job_item',
        'columns' => array('tjiid' => 'tjiid'),
      ),
    ),
  );

  $schema['osha_locales_source_blacklist'] = array(
    'description' => 'List of strings excluded from translation',
    'fields' => array(
      'lid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Source string ID. References {locales_source}.lid.',
      ),
    ),
    'primary key' => array('lid'),
  );

  return $schema;
}

/**
 * Add fields to job item, fix tmgmt 'Add to cart' rule, disable tmgmt_node.
 */
function osha_tmgmt_update_7001() {
  module_load_include('module', 'osha_tmgmt');
  module_load_include('module', 'osha_tmgmt', 'osha_tmgmt.workflow');
  module_disable(array('tmgmt_node'));
  osha_tmgmt_workflow_create_roles();
  db_create_table(
    'osha_tmgmt_job_trans_validators',
    drupal_get_schema_unprocessed('osha_tmgmt', 'osha_tmgmt_job_trans_validators')
  );
  if (!db_field_exists('tmgmt_job_item', 'eid')) {
    $field = array(
      'description' => 'Translation Validators groups',
      'type' => 'int',
      'unsigned' => TRUE,
      'default' => NULL,
      'not null' => FALSE,
    );
    db_add_field('tmgmt_job_item', 'eid', $field);
  }
}

/**
 * Add field VID to job item.
 */
function osha_tmgmt_update_7002() {
  if (!db_field_exists('tmgmt_job_item', 'vid')) {
    $field = array(
      'description' => 'Translated Revision',
      'type' => 'int',
      'default' => NULL,
      'not null' => FALSE,
    );
    db_add_field('tmgmt_job_item', 'vid', $field);
  }

  // Disable defautl view - replaced by osha_translation_job_overview.
  $view = views_get_view('tmgmt_ui_job_overview');
  if (!empty($view)) {
    // Revert the view before disable it.
    $view->delete();
    ctools_include('object-cache');
    ctools_object_cache_clear('view', 'tmgmt_ui_job_overview');
    $status = variable_get('views_defaults', array());
    $status['tmgmt_ui_job_overview'] = TRUE;
    variable_set('views_defaults', $status);
  }

  // CW-903, full_html permissions for content validator and layout validator
  $role_names = array(
    'Translation Manager',
    'Translation Liaison',
    'Layout Validator',
    'Content Validator'
  );
  foreach ($role_names as $role_name) {
    $role = user_role_load_by_name($role_name);
    user_role_grant_permissions($role->rid, array('use text format full_html'));
  }
  // CW-928, workbench access permissions for translation manager
  $role = user_role_load_by_name('Translation Manager');
  user_role_grant_permissions($role->rid,
    array(
      'view workbench access information',
      'access workbench access by role'
    ));
  module_load_include('inc', 'workbench_moderation', 'workbench_moderation.admin');
  workbench_access_role_section_save($role->rid, 'main-menu', 'menu');
}

/**
 * Add has_file_uploaded field.
 *
 * from 25.11.14
 */
function osha_tmgmt_update_7003() {
  if (!db_field_exists('tmgmt_job', 'has_file_uploaded')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'If the job has file uploaded.',
    );
    db_add_field('tmgmt_job', 'has_file_uploaded', $field);
  }
}

/**
 * Add file_sent field to Job.
 */
function osha_tmgmt_update_7004() {
  if (!db_field_exists('tmgmt_job', 'file_sent')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Marks the job if the translation file was sent to CDT',
    );
    db_add_field('tmgmt_job', 'file_sent', $field);
  }
}

/**
 * Revert job translation views
 */
function osha_tmgmt_update_7006() {
  foreach(array('osha_translation_job_overview', 'osha_job_overview_job_items') as $view_name) {
    $view = views_get_view($view_name);
    if ($view->type == t('Overridden')) {
      // Revert the view.
      $view->delete();
      // Clear its cache.
      ctools_include('object-cache');
      ctools_object_cache_clear('view', $view->name);
      // Give feedback.
      $message = dt("Reverted the view '@viewname'", array('@viewname' => $view->name));
      drupal_set_message($message);
    }
  }
}

/**
 * Merge OSHA specific strings into locale system
 */
function osha_tmgmt_update_7007() {
  module_load_include('module', 'osha_tmgmt');
  osha_tmgmt_refresh_string_list();
}

/**
 * Increase module weight to be able to override 'ui controller class' in hook_tmgmt_source_plugin_info_alter().
 */
function osha_tmgmt_update_7008() {
  db_update('system')
    ->fields(array('weight' => 15))
    ->condition('name', 'osha_tmgmt', '=')
    ->execute();
}

/**
 * Configure permissions for Layout Validator so he can adjust strings & terms.
 */
function osha_tmgmt_update_7009() {
  cache_clear_all();
  drupal_static_reset('system_list');
  drupal_static_reset();
  $vocabularies = taxonomy_get_vocabularies();
  $permissions = array(
    #'translate taxonomy_term entities',
    'translate interface',
    'translate user-defined strings',
    'translate admin strings',
  );
  foreach($vocabularies as $vid => $voc) {
    $permissions[] = 'edit terms in ' . $vid;
  }
  if ($role = user_role_load_by_name('Layout Validator')) {
    user_role_grant_permissions($role->rid, $permissions);
  }
}

function osha_tmgmt_update_7010() {
  if (!db_field_exists('tmgmt_job_item', 'merged')) {
    $field = array(
      'description' => 'If the translation was merged to entity',
      'type' => 'int',
      'default' => NULL,
      'not null' => FALSE,
    );
    db_add_field('tmgmt_job_item', 'merged', $field);
  }
}

/**
 * Create the osha_locales_source_blacklist table.
 */
function osha_tmgmt_update_7011() {
  db_create_table(
    'osha_locales_source_blacklist',
    drupal_get_schema_unprocessed('osha_tmgmt', 'osha_locales_source_blacklist')
  );
}

/**
 * Fix metatags for published items from job #148
 */
function osha_tmgmt_update_7012() {
  /** @var OshaTMGMTJob $job */
  $job = tmgmt_job_load(148);
  $i = 0;
  foreach($job->getItems() as $job_item) {
    /** @var OshaTMGMTJobItem $job_item */
    if ($job_item->state == TMGMT_JOB_STATE_ACCEPTED) {
      if ($metatags = $job_item->getData(array('metatags'))) {
        $job_item->acceptTranslationIntoEntity();
        $i++;
      }
    }
  }
}

/**
 * Fix broken metatag structure imported from translations
 */
function osha_tmgmt_update_7013() {
  $query = db_query("SELECT * FROM metatag WHERE language <> 'en' AND entity_id  IN (SELECT item_id FROM tmgmt_job_item WHERE item_type = 'node' AND tjid IN (147, 148))");
  while ($row = $query->fetchAssoc()) {
    $data = unserialize($row['data']);
    $new_data = array();
    if (!empty($data['title']) && !is_array($data['title'])) {
      $new_data['title'] = array('value' => $data['title']);
    }

    if (!empty($data['description']) && !is_array($data['description'])) {
      $new_data['description'] = array('value' => $data['description']);
    }

    if (!empty($new_data)) {
      $q = db_update('metatag')
        ->fields(array(
          'data' => serialize($new_data)
        ))
        ->condition('entity_type', 'node')
        ->condition('entity_id', $row['entity_id'])
        ->condition('revision_id', $row['revision_id'])
        ->condition('language', $row['language']);
      $q->execute();
    }
  }
}

/*
 * Delete literals affected by CW-1611
 */
function osha_tmgmt_update_7014() {
  db_delete('locales_source')->condition('lid', 17340, '>')->execute();
}

/**
 * Fix terms languages and name_fields.
 */
function osha_tmgmt_update_7015() {
  $vocabs = array(
    'country',
    'fop_link_sections',
//    'contact_type',
    'newsletter_sections',
//    'section',
    'organised_by',
    'attachment_file_type',
  );
  foreach ($vocabs as $vocab) {
    $voc = taxonomy_vocabulary_machine_name_load($vocab);
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'taxonomy_term')
      ->propertyCondition('vid', $voc->vid);
    $result = $query->execute();

    if (isset($result['taxonomy_term'])) {
      $tids = array_keys($result['taxonomy_term']);
      foreach ($tids as $tid) {
        $term = taxonomy_term_load($tid);
        $term->language = 'en';
        if (isset($term->name_field[LANGUAGE_NONE])) {
          $term->name_field['en'] = $term->name_field[LANGUAGE_NONE];
          $term->name_field[LANGUAGE_NONE] = array();
        }
        if (isset($term->description_field[LANGUAGE_NONE])) {
          $term->description_field['en'] = $term->description_field[LANGUAGE_NONE];
          $term->description_field[LANGUAGE_NONE] = array();
        }
        taxonomy_term_save($term);
      }
    }
  }
}

/**
 * Fix tmgmt_job_items of taxonomies with und.
 */
function osha_tmgmt_update_7016() {
  db_update('tmgmt_job_item')
    ->fields(array(
      'source_language' => 'en',
    ))
    ->condition('item_type', 'taxonomy_term')
    ->condition('source_language', 'und')
    ->execute();
}
